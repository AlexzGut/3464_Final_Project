package application;

import com.lcit.model.*;
import com.lcit.dao.*;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.control.cell.TextFieldTableCell;
import javafx.scene.layout.BorderPane;
import javafx.scene.control.Label;
import javafx.scene.control.TableView;
import javafx.scene.control.TableColumn;

import java.sql.Date;
import java.util.ArrayList;
//import java.time.LocalDate;

public class PatientRecordsController {

	@FXML
	private BorderPane bpContainer;
	
	@FXML
	private Button btnInsert;
	
	@FXML
	private Label lblOutputMsg;
	
	@FXML
    private TableView<Patient> tvRecords;
	
	@FXML
    private TableColumn<Patient, Integer> tcId;
	
    @FXML
    private TableColumn<Patient, String> tcFirstName;

    @FXML
    private TableColumn<Patient, String> tcLastName;
    
    @FXML
    private TableColumn<Patient, Date> tcDateOfBirth;
	
    @FXML
    private TableColumn<Patient, String> tcAddress;

    @FXML
    private TableColumn<Patient, String> tcContactNumber;
    
    @FXML
    private TableColumn<Patient, String> tcEmail;

    @FXML
    private TableColumn<Patient, String> tcDetails;	
    
    @FXML
    private TableColumn<Patient, Button> tcActions;	
    
    @FXML
    private TableColumn<Patient, Button> tcEdit;	
    
    @FXML
    private TableColumn<Patient, Button> tcDelete;	

	public void initialize() {
		
		DAO patients = new DAO();
	    ArrayList<Patient> patientRecords = patients.selectRecords();
	    
		for (Patient patient : patientRecords) {
			addButtons(patient);
		}
		
		ObservableList<Patient> data = FXCollections.observableArrayList(patientRecords);
		
		tcId.setCellValueFactory(new PropertyValueFactory<Patient, Integer>("id"));
		tcFirstName.setCellValueFactory(new PropertyValueFactory<Patient, String>("firstName"));
		tcLastName.setCellValueFactory(new PropertyValueFactory<Patient, String>("lastName"));
		tcDateOfBirth.setCellValueFactory(new PropertyValueFactory<Patient, Date>("dateOfBirth"));
		tcAddress.setCellValueFactory(new PropertyValueFactory<Patient, String>("address"));
		tcContactNumber.setCellValueFactory(new PropertyValueFactory<Patient, String>("contactNumber"));
		tcEmail.setCellValueFactory(new PropertyValueFactory<Patient, String>("email"));
		tcDetails.setCellValueFactory(new PropertyValueFactory<Patient, String>("details"));
		tcEdit.setCellValueFactory(new PropertyValueFactory<Patient, Button>("btnEdit"));
		tcDelete.setCellValueFactory(new PropertyValueFactory<Patient, Button>("btnDelete"));
		editableCols();
		tvRecords.setItems(data);
	}	
	
	public void addButtons(Patient patient) {
		Button btnDelete = new Button("Delete");
		btnDelete.setOnAction(e -> btnDeleteListener(patient));
		patient.setBtnDelete(btnDelete);
	}

	public void btnDeleteListener(Patient patient) {
		DAO patients = new DAO();
		
		patients.deletRecord(patient);	

		tvRecords.getItems().remove(patient);

	}
	private void editableCols(){
		tcFirstName.setCellFactory(TextFieldTableCell.forTableColumn());
//	    column_id.setOnEditCommit(e->e.getTableView().getItems().get(e.getTablePosition().getRow()).setId(e.getNewValue()));
//
//	    column_name.setCellFactory(TextFieldTableCell.forTableColumn());
//	    column_name.setOnEditCommit(e->e.getTableView().getItems().get(e.getTablePosition().getRow()).setName(e.getNewValue()));
//
//	    column_email.setCellFactory(TextFieldTableCell.forTableColumn());
//	    column_email.setOnEditCommit(e->e.getTableView().getItems().get(e.getTablePosition().getRow()).setEmail(e.getNewValue()));
//
//	    column_notes.setCellFactory(TextFieldTableCell.forTableColumn());
//	    column_notes.setOnEditCommit(e->e.getTableView().getItems().get(e.getTablePosition().getRow()).setNotes(e.getNewValue()));

	    /* Allow for the values in each cell to be changable */
	    tvRecords.setEditable(true); 
	}
}
